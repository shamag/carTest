html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after {
  content: "";
  content: none;
}

q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

html {
  font-family: Arial, sans-serif, Tahoma;
}

body {
  width: 100%;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

strong {
  font-weight: bold;
}

em {
  font-style: italic;
}

input:focus, input:active,
textarea:focus,
textarea:active {
  border: none;
  outline: none;
}

button:focus {
  outline: none;
}

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.clear {
  *zoom: 1;
}

.clear:before, .clear:after {
  content: " ";
  display: table;
}

.clear:after {
  clear: both;
}

.device {
  margin: 0 auto;
  position: relative;
  width: 100%;
  height: 1000px;
}

@media (max-width: 320px) {
  .device {
    display: none;
  }
}

.device .device-popup {
  display: none;
  z-index: 20;
  background: white;
  position: absolute;
  top: 30px;
  left: 30px;
  right: 30px;
  bottom: 30px;
}

.device .device-popup.active {
  display: block;
}

.device .device-popup .device-popup-icon {
  position: absolute;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.device .device-menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  bottom: 0px;
  right: 0px;
  left: 0px;
  background-color: rgba(255, 255, 255, 0.3);
}

.device .device-menu .device-app {
  min-width: 16.6%;
  margin-bottom: 0px;
}

@media (min-width: 320px) {
  .device .device-menu {
    height: 60px;
  }
}

@media (min-width: 568px) {
  .device .device-menu {
    height: 45px;
  }
}

@media (min-width: 768px) {
  .device .device-menu {
    height: 120px;
  }
}

.device .device-display {
  overflow: hidden;
}

.device .device-screens {
  -webkit-transition: 500ms all ease-in-out;
  transition: 500ms all ease-in-out;
  position: static;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  /* min-width: 50000px; */
}

.device .device-pager {
  position: absolute;
  width: 100%;
  z-index: 10;
}

@media (min-width: 320px) {
  .device .device-pager {
    bottom: 63px;
  }
}

@media (min-width: 568px) {
  .device .device-pager {
    bottom: 45px;
  }
}

@media (min-width: 768px) {
  .device .device-pager {
    bottom: 130px;
  }
}

.device .device-pager ul {
  display: block;
}

.device .device-pager ul li {
  margin-right: 5px;
  cursor: pointer;
  display: inline-block;
  border-radius: 100%;
  border: 1px solid white;
}

.device .device-pager ul li.active {
  background-color: white;
}

@media (min-width: 320px) {
  .device .device-pager ul li {
    padding: 2px;
  }
}

@media (min-width: 768px) {
  .device .device-pager ul li {
    padding: 5px;
  }
}

.device .device-screen {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-line-pack: start;
      align-content: flex-start;
  min-width: 100%;
  overflow: hidden;
}

@media (min-width: 320px) {
  .device .device-screen {
    padding: 3px;
  }
}

@media (min-width: 768px) {
  .device .device-screen {
    padding: 25px;
  }
}

@media (min-width: 320px) {
  .device:before {
    content: '';
    position: absolute;
    left: -23px;
    right: -20px;
    top: -81px;
    bottom: -81px;
    background: url("../img/iphone5-ver.png") no-repeat center;
    background-size: contain;
    z-index: -1;
  }
}

@media (min-width: 568px) {
  .device:before {
    content: '';
    position: absolute;
    left: -81px;
    right: -81px;
    top: -23px;
    bottom: -23px;
    background: url("../img/ipone5-hor.png") no-repeat center;
    background-size: contain;
    z-index: -1;
  }
}

@media (min-width: 768px) {
  .device:before {
    content: '';
    position: absolute;
    left: -77px;
    right: -78px;
    top: -85px;
    bottom: -98px;
    background: url("../img/ipad-mini-vertical.png") no-repeat center;
    background-size: contain;
    z-index: -1;
  }
}

@media (min-width: 1024px) {
  .device:before {
    content: '';
    position: absolute;
    left: -85px;
    right: -98px;
    top: -78px;
    bottom: -77px;
    background: url("../img/ipad-mini-horizontal.png") no-repeat center;
    background-size: contain;
    z-index: -1;
  }
}

@media (min-width: 320px) {
  .device {
    background: url("../img/background.jpg") no-repeat center;
    background-size: cover;
    height: 389px;
    width: 217px;
  }
}

@media (min-width: 568px) {
  .device {
    background: url("../img/background.jpg") no-repeat center;
    background-size: cover;
    height: 218px;
    width: 386px;
  }
}

@media (min-width: 768px) {
  .device {
    background: url("../img/background.jpg");
    background-size: cover;
    height: 800px;
    width: 600px;
  }
}

@media (min-width: 1024px) {
  .device {
    background: url("../img/background.jpg");
    background-size: cover;
    height: 600px;
    width: 800px;
  }
}

.device .device-app {
  min-width: 20%;
}

.device .device-app .device-app-name {
  color: white;
  font-size: 0.8em;
}

@media (min-width: 320px) {
  .device .device-app .device-app-name {
    text-overflow: ellipsis;
    overflow: hidden;
    margin-top: 0px;
    font-size: 0.6em;
  }
}

@media (min-width: 768px) {
  .device .device-app .device-app-name {
    margin-top: 4px;
    font-size: 0.8em;
  }
}

.device .device-app .device-app-icon {
  margin: 0 auto;
  max-height: 85px;
}

.device .device-app .device-app-icon img {
  max-width: 100%;
  max-height: 100%;
}

@media (min-width: 320px) {
  .device .device-app .device-app-icon {
    max-width: 35px;
  }
}

@media (min-width: 568px) {
  .device .device-app .device-app-icon {
    max-width: 25px;
  }
}

@media (min-width: 768px) {
  .device .device-app .device-app-icon {
    max-width: 75px;
  }
}

@media (min-width: 320px) {
  .device .device-app {
    width: 25%;
    margin-bottom: 18px;
  }
}

@media (min-width: 568px) {
  .device .device-app {
    max-width: 20%;
    margin-bottom: 2px;
  }
}

@media (min-width: 768px) {
  .device .device-app {
    margin-bottom: 30px;
    min-width: 25%;
  }
}

@media (min-width: 1024px) {
  .device .device-app {
    margin-bottom: 15px;
    min-width: 20%;
  }
}

#layout-main-wrap {
  overflow: hidden;
  max-width: 100%;
  margin: 0 auto;
}

@media (min-width: 320px) {
  #layout-main-wrap {
    width: 320px;
  }
}

@media (min-width: 568px) {
  #layout-main-wrap {
    width: 568px;
  }
}

@media (min-width: 768px) {
  #layout-main-wrap {
    width: 1000px;
  }
}

@media (min-width: 1024px) {
  #layout-main-wrap {
    width: 1300px;
  }
}

main {
  margin: 150px auto;
  text-align: center;
}

.drag-element {
  position: absolute;
  width: 85px;
  height: 85px;
  background: black;
  top: -1000px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
